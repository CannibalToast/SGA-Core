According to the modding tools:

Archive Headers follow this format:
0x0-0x8 b'ARCHIVE_` ~ MAGIC (Nothing we didn't already know)
0x8-0x12 ~ VERSION
0x12-0x16 ~ PRODUCT (always `COH` which is 0), I will continue to call it Minor since 'product' would be implemented per Version

The following is only valid for formats [4,9] (and when Product is 0)
V[4,5]
    bytes[16] ~ FileMD5
V[Any]
    str[128] "utf-16-le" ~ NAME
V[4,5]
    bytes[16] ~ HeaderMD5
V[9]
    UInt64 ~ toc_pos
V[8]
    UInt32 ~ toc_pos
UInt32 ~ toc_size
V[9]
    UInt64 ~ data_pos
    Uint64 ~ data_size
V[8]
    UInt32 ~ data_pos
    Uint32 ~ data_size
V[4,5,6,7]
    UInt32 ~ data_pos
UInt32 ~ ??? (RSV_1) # v[2] doesn't have this
V[8,9]
    bytes[256] ~ ???
V[4,5,6,7]
    stream.tell() ~ toc_pos

# starting @ toc_pos
uint32 ~ toc_data pos
uint16/32 ~ toc_data count # v[4] uses uint16, v[5,6,7,8,9] use uint32
uint32 ~ folder pos
uint16/32 ~ folder count # v[4] uses uint16, v[5,6,7,8,9] use uint32
uint32 ~ file pos
uint16/32 ~ file count # v[4] uses uint16, v[5,6,7,8,9] use uint32
uint32 ~ name pos
uint16/32 ~ name count / name buffer size # Varies depending on version; but ArchiveReader doens't use it # v[4] uses uint16, v[5,6,7,8,9] use uint32
V[7,8,9]
    uint32 ~ ???
V[8,9]
    uint32 ~ ???
V[7,8,9]
    uint32 ~ block size

~~~ TocData
alias : bytes[64]
name : bytes[64]
v[4]
    uint16 : fold_start, fold_end, file_Start, file_end, folder_root
v[5,6,7,8,9]
    uint32 : fold_start, fold_end, file_Start, file_end, folder_root

~~~ FolderData
name offset : Uint32
v[4]
    uint16 : fold_start, fold_end, file_Start, file_end
v[5,6,7,8,9]
    uint32 : fold_start, fold_end, file_Start, file_end


~~~ FileData
name offset : Uint32
v[8, 9]
    uint32 : hash_offset # neat, DowIII has hashing
v[4,5,6,7,8]
    uint32 : data_offset
v[9]
    uint64 : data_offset
length : uint32
store length : uint32
modified : uint32 # unix epoch?
verification type : byte (FileVerificationType)
storage type : byte (FileStorageType)
v[6,7,8,9]
    crc : uin32
v[7]
    hash_offset : uint32 # CoH2 also has offset, but it's at the end of the header?






